<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="13" passed="10" failed="1" skipped="2">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-11-21T13:56:49 IST" name="Suite" finished-at="2024-11-21T13:59:53 IST" duration-ms="183924">
    <groups>
    </groups>
    <test started-at="2024-11-21T13:56:49 IST" name="Test" finished-at="2024-11-21T13:59:53 IST" duration-ms="183924">
      <class name="tests.Login">
        <test-method is-config="true" signature="setTup()[pri:0, instance:tests.Login@2a4fb17b]" started-at="2024-11-21T13:56:52 IST" name="setTup" finished-at="2024-11-21T13:57:26 IST" duration-ms="33826" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTup -->
        <test-method signature="verifyLoginUsingValidCredentials(java.lang.String,java.lang.String)[pri:1, instance:tests.Login@2a4fb17b]" started-at="2024-11-21T13:57:26 IST" name="verifyLoginUsingValidCredentials" data-provider="dataSupplier1" finished-at="2024-11-21T13:57:30 IST" duration-ms="4223" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[bunny123@yahoo.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginUsingValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Login@2a4fb17b]" started-at="2024-11-21T13:57:30 IST" name="tearDown" finished-at="2024-11-21T13:57:34 IST" duration-ms="3819" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setTup()[pri:0, instance:tests.Login@2a4fb17b]" started-at="2024-11-21T13:57:34 IST" name="setTup" finished-at="2024-11-21T13:57:55 IST" duration-ms="21176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTup -->
        <test-method signature="verifyLoginUsingValidCredentials(java.lang.String,java.lang.String)[pri:1, instance:tests.Login@2a4fb17b]" started-at="2024-11-21T13:57:55 IST" name="verifyLoginUsingValidCredentials" data-provider="dataSupplier1" finished-at="2024-11-21T13:57:58 IST" duration-ms="2742" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[bunnynvfkkd@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginUsingValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Login@2a4fb17b]" started-at="2024-11-21T13:57:58 IST" name="tearDown" finished-at="2024-11-21T13:58:00 IST" duration-ms="1979" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setTup()[pri:0, instance:tests.Login@2a4fb17b]" started-at="2024-11-21T13:58:00 IST" name="setTup" finished-at="2024-11-21T13:58:07 IST" duration-ms="7532" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTup -->
        <test-method signature="verifyLoginUsingValidCredentials(java.lang.String,java.lang.String)[pri:1, instance:tests.Login@2a4fb17b]" started-at="2024-11-21T13:58:07 IST" name="verifyLoginUsingValidCredentials" data-provider="dataSupplier1" finished-at="2024-11-21T13:58:10 IST" duration-ms="2149" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[bunnygbdhgd123h@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginUsingValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Login@2a4fb17b]" started-at="2024-11-21T13:58:10 IST" name="tearDown" finished-at="2024-11-21T13:58:11 IST" duration-ms="1834" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setTup()[pri:0, instance:tests.Login@2a4fb17b]" started-at="2024-11-21T13:58:11 IST" name="setTup" finished-at="2024-11-21T13:58:19 IST" duration-ms="7286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTup -->
        <test-method signature="verifyLoginUsingInValidCredentials()[pri:2, instance:tests.Login@2a4fb17b]" started-at="2024-11-21T13:58:19 IST" name="verifyLoginUsingInValidCredentials" finished-at="2024-11-21T13:58:21 IST" duration-ms="1805" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginUsingInValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Login@2a4fb17b]" started-at="2024-11-21T13:58:21 IST" name="tearDown" finished-at="2024-11-21T13:58:22 IST" duration-ms="1813" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setTup()[pri:0, instance:tests.Login@2a4fb17b]" started-at="2024-11-21T13:58:22 IST" name="setTup" finished-at="2024-11-21T13:58:29 IST" duration-ms="6978" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTup -->
        <test-method signature="verifyLoginUsingInValidEmailAndvalidPasswordCredentials()[pri:3, instance:tests.Login@2a4fb17b]" started-at="2024-11-21T13:58:29 IST" name="verifyLoginUsingInValidEmailAndvalidPasswordCredentials" finished-at="2024-11-21T13:58:31 IST" duration-ms="1583" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginUsingInValidEmailAndvalidPasswordCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Login@2a4fb17b]" started-at="2024-11-21T13:58:31 IST" name="tearDown" finished-at="2024-11-21T13:58:33 IST" duration-ms="1941" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setTup()[pri:0, instance:tests.Login@2a4fb17b]" started-at="2024-11-21T13:58:33 IST" name="setTup" finished-at="2024-11-21T13:58:40 IST" duration-ms="7539" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTup -->
        <test-method signature="verifyLoginUsingValidEmailInvalidpasswordCredentials()[pri:4, instance:tests.Login@2a4fb17b]" started-at="2024-11-21T13:58:40 IST" name="verifyLoginUsingValidEmailInvalidpasswordCredentials" finished-at="2024-11-21T13:58:42 IST" duration-ms="1644" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginUsingValidEmailInvalidpasswordCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Login@2a4fb17b]" started-at="2024-11-21T13:58:42 IST" name="tearDown" finished-at="2024-11-21T13:58:44 IST" duration-ms="1800" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setTup()[pri:0, instance:tests.Login@2a4fb17b]" started-at="2024-11-21T13:58:44 IST" name="setTup" finished-at="2024-11-21T13:58:52 IST" duration-ms="8121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTup -->
        <test-method signature="verifyLoginUsingWithoutCredentials()[pri:5, instance:tests.Login@2a4fb17b]" started-at="2024-11-21T13:58:52 IST" name="verifyLoginUsingWithoutCredentials" finished-at="2024-11-21T13:58:53 IST" duration-ms="1012" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginUsingWithoutCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Login@2a4fb17b]" started-at="2024-11-21T13:58:53 IST" name="tearDown" finished-at="2024-11-21T13:58:55 IST" duration-ms="1793" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.Login -->
      <class name="tests.Search">
        <test-method is-config="true" signature="setTup()[pri:0, instance:tests.Search@3c41ed1d]" started-at="2024-11-21T13:59:36 IST" name="setTup" finished-at="2024-11-21T13:59:42 IST" duration-ms="5866" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTup -->
        <test-method signature="verifySearchWithExistingProduct()[pri:1, instance:tests.Search@3c41ed1d]" started-at="2024-11-21T13:59:42 IST" name="verifySearchWithExistingProduct" finished-at="2024-11-21T13:59:43 IST" duration-ms="1228" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at tests.Search.verifySearchWithExistingProduct(Search.java:69)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchWithExistingProduct -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Search@3c41ed1d]" started-at="2024-11-21T13:59:44 IST" name="tearDown" finished-at="2024-11-21T13:59:45 IST" duration-ms="1788" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifySearchWithNonExistingProduct()[pri:2, instance:tests.Search@3c41ed1d]" started-at="2024-11-21T13:59:45 IST" name="verifySearchWithNonExistingProduct" finished-at="2024-11-21T13:59:45 IST" depends-on-methods="tests.Search.verifySearchWithExistingProduct" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method tests.Search.verifySearchWithNonExistingProduct() on instance tests.Search@3c41ed1d depends on not successfully finished methods 
[tests.Search.verifySearchWithExistingProduct() on instance tests.Search@3c41ed1d]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method tests.Search.verifySearchWithNonExistingProduct() on instance tests.Search@3c41ed1d depends on not successfully finished methods 
[tests.Search.verifySearchWithExistingProduct() on instance tests.Search@3c41ed1d]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:159)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchWithNonExistingProduct -->
        <test-method is-config="true" signature="setTup()[pri:0, instance:tests.Search@3c41ed1d]" started-at="2024-11-21T13:59:45 IST" name="setTup" finished-at="2024-11-21T13:59:51 IST" duration-ms="5968" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTup -->
        <test-method signature="verifySearchWithoutAnyProduct()[pri:3, instance:tests.Search@3c41ed1d]" started-at="2024-11-21T13:59:51 IST" name="verifySearchWithoutAnyProduct" finished-at="2024-11-21T13:59:51 IST" duration-ms="11" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Intentionally skipped]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Intentionally skipped
at tests.Search.verifySearchWithoutAnyProduct(Search.java:91)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchWithoutAnyProduct -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Search@3c41ed1d]" started-at="2024-11-21T13:59:51 IST" name="tearDown" finished-at="2024-11-21T13:59:53 IST" duration-ms="1728" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.Search -->
      <class name="tests.Register">
        <test-method is-config="true" signature="setTup()[pri:0, instance:tests.Register@36ebc363]" started-at="2024-11-21T13:58:55 IST" name="setTup" finished-at="2024-11-21T13:59:02 IST" duration-ms="7182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTup -->
        <test-method signature="verifyRegisteringAccountUsingMandatoryFields()[pri:1, instance:tests.Register@36ebc363]" started-at="2024-11-21T13:59:02 IST" name="verifyRegisteringAccountUsingMandatoryFields" finished-at="2024-11-21T13:59:06 IST" duration-ms="4367" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringAccountUsingMandatoryFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Register@36ebc363]" started-at="2024-11-21T13:59:06 IST" name="tearDown" finished-at="2024-11-21T13:59:08 IST" duration-ms="1722" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setTup()[pri:0, instance:tests.Register@36ebc363]" started-at="2024-11-21T13:59:08 IST" name="setTup" finished-at="2024-11-21T13:59:15 IST" duration-ms="7275" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTup -->
        <test-method signature="verifyRegisteringAccountUsingAllFields()[pri:2, instance:tests.Register@36ebc363]" started-at="2024-11-21T13:59:15 IST" name="verifyRegisteringAccountUsingAllFields" finished-at="2024-11-21T13:59:20 IST" duration-ms="4698" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringAccountUsingAllFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Register@36ebc363]" started-at="2024-11-21T13:59:20 IST" name="tearDown" finished-at="2024-11-21T13:59:22 IST" duration-ms="1864" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setTup()[pri:0, instance:tests.Register@36ebc363]" started-at="2024-11-21T13:59:22 IST" name="setTup" finished-at="2024-11-21T13:59:29 IST" duration-ms="7208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTup -->
        <test-method signature="verifyRegistrationUsingSayingYesToNewsletter()[pri:3, instance:tests.Register@36ebc363]" started-at="2024-11-21T13:59:29 IST" name="verifyRegistrationUsingSayingYesToNewsletter" finished-at="2024-11-21T13:59:34 IST" duration-ms="5107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationUsingSayingYesToNewsletter -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Register@36ebc363]" started-at="2024-11-21T13:59:34 IST" name="tearDown" finished-at="2024-11-21T13:59:36 IST" duration-ms="1824" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.Register -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
